.NM pp C compiler preprocessor
.FU
pp performs lexical analysis and all other preprocessor functions
signalled by lines starting with #'s.
It reads program text from a set of specified file arguments,
or from STDIN if none, plus other files named in #include statements,
and writes encoded lexemes to STDOUT,
or to the file named by a -o flag.
Error messages are labelled with the current file and line number
and are directed to STDERR,
or to STDOUT if -o is used.
.LP
Its operation is best described as a series of simple
data transforms, to wit:
.IP "getlin -"
reads blocks of text from a specified file, returning only when an entire
text line is in the specified buffer.
.IP "getln -"
uses getlin to build a logical line.
Each /* comment */ is replaced by a blank and each line ending in \e is
merged with the line following.
.IP "getin -"
keeps trying to read a text line from the topmost file of the #include stack,
popping ended files, until success or EOF on the lowest level file.
Calls stotl to
parse an input text line into a list of tokens (identifier, number,
\&'string', "string", or punctuation), each token list being
terminated by a PEOL token.
.IP "getex -"
identifies all # lines and performs macro expansion on all lines but
#ifdef, #ifndef, #define, and #endif.
The tests are made for #ifdef and #ifndef.
.IP "main -"
tries to parse the entire input as an #if - #endif balanced
group ending in EOF.
It complains and retries on unexpected #else or #endif.
.IP "putgr -"
performs #if, #ifdef, #ifndef logic, recursively calling itself to put
or skip embedded groups up to a balancing #else, #endif, or EOF.
.IP "putns -"
called only for lines not to be skipped, processes #define,
#undef, #include, #line and all other # statements.
.IP "putls -"
converts keywords to special tokens, accumulates floating, long and short
numbers, and unpacks operator strings.
.LP
The code is organized into several files:
.IP "int0.h -"
data structures and type definitions peculiar to pp,
but common to all parts thereof.
.IP "int01.h -"
definitions common to pp and p1 of the C compiler.
.IP "int012.h -"
definitions common to all parts of the C compiler.
.IP "p0conf.c -"
configuration file; defines the pathname for
#include <name> and the standard preprocessor characters,
normally # and @.
.IP "p0eval.c -"
the expression evaluator for #if.
.IP "p0lex.c -"
the rest of the data flow, from putls on, including all associated routines
for performing lexical analysis.
.IP "p0main.c -"
the data flow outlined above, from getln down through putns, inclusive.
.IP "p0subs.c -"
auxiliary subroutines used by the principal transforms in main.c.
