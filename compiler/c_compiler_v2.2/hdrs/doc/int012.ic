.NM int012.h constants used by all compiler passes
.FU
int012.h contains those C operators which are encoded from the input to pp
and which are used throughout all passes.
.IP "BINOP -"
binary operators are encoded such that
((BINOP & op) == BINOP).
.IP "UNOP -"
unary operators are encoded such that
((UNOP & op) == UNOP).
.LP
Operators may be both unary and binary (e.g. LTIMES).
The input tokens associated with operator defines are:
.DS
.hc
		LAND	&		LGXOR	=^
		LANDAND	&&		LINCR	++
		LCOMP	~		LISEQ	==
		LDECR	--		LLESS	<
		LDIVIDE	/		LLEQ	<=
		LGAND	=&		LLSHIFT	<<
		LGDIV	=/		LMINUS	-
		LGETS	=		LMODULO	%
		LGLSH	=<<		LNOT	!
		LGRSH	=>>		LNOTEQ	!=
		LGMIN	=-		LOR		|
		LGMOD	=%		LOROR	||
		LGOR	=|		LPLUS	+
		LGPLU	=+		LQUERY	?
		LGREAT	>		LRSHIFT	>>
		LGEQ	>=		LTIMES	*
		LGTIM	=*		LXOR	^
.DE
.IP "NAMING -"
Throughout the compiler, manifest constants whose names begin with 'L'
are lexemes that originate in input text, while 'D' names indicate
entities that are defined along the way.
Thus, DEXTERN is introduced to describe the storage class of a symbol
that has the extern storage class, but is now further known from context
to be defined, i.e. initialized.
